"""Make relation categories and vacancies from many-to-many to one-to-many

Revision ID: 017
Revises: 016
Create Date: 2024-11-14 05:34:11.696827

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '017'
down_revision: Union[str, None] = '016'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('job_vacancy_category_association')
    op.add_column('job_vacancies', sa.Column('category_id', sa.Integer(), nullable=False))
    op.create_foreign_key(None, 'job_vacancies', 'job_vacancy_categories', ['category_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'job_vacancies', type_='foreignkey')
    op.drop_column('job_vacancies', 'category_id')
    op.create_table('job_vacancy_category_association',
    sa.Column('job_vacancy_id', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('job_vacancy_category_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.ForeignKeyConstraint(['job_vacancy_category_id'], ['job_vacancy_categories.id'], name='job_vacancy_category_association_job_vacancy_category_id_fkey'),
    sa.ForeignKeyConstraint(['job_vacancy_id'], ['job_vacancies.id'], name='job_vacancy_category_association_job_vacancy_id_fkey'),
    sa.PrimaryKeyConstraint('job_vacancy_id', 'job_vacancy_category_id', name='job_vacancy_category_association_pkey')
    )
    # ### end Alembic commands ###
