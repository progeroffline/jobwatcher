"""Make relation categories and vacancies from one-to-many to many-to-many

Revision ID: 016
Revises: 015
Create Date: 2024-11-14 05:32:11.897135

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '016'
down_revision: Union[str, None] = '015'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('job_vacancy_category_association',
    sa.Column('job_vacancy_id', sa.String(), nullable=False),
    sa.Column('job_vacancy_category_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['job_vacancy_category_id'], ['job_vacancy_categories.id'], ),
    sa.ForeignKeyConstraint(['job_vacancy_id'], ['job_vacancies.id'], ),
    sa.PrimaryKeyConstraint('job_vacancy_id', 'job_vacancy_category_id')
    )
    op.drop_constraint('job_vacancies_category_id_fkey', 'job_vacancies', type_='foreignkey')
    op.drop_column('job_vacancies', 'category_id')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('job_vacancies', sa.Column('category_id', sa.INTEGER(), autoincrement=False, nullable=False))
    op.create_foreign_key('job_vacancies_category_id_fkey', 'job_vacancies', 'job_vacancy_categories', ['category_id'], ['id'])
    op.drop_table('job_vacancy_category_association')
    # ### end Alembic commands ###
